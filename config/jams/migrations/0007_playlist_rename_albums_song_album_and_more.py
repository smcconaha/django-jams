# Generated by Django 4.1.3 on 2022-11-17 17:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('jams', '0006_genre_genresong_song_genres'),
    ]

    operations = [
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.RenameField(
            model_name='song',
            old_name='albums',
            new_name='album',
        ),
        migrations.RenameField(
            model_name='song',
            old_name='artists',
            new_name='artist',
        ),
        migrations.RemoveField(
            model_name='song',
            name='genres',
        ),
        migrations.AddField(
            model_name='song',
            name='genre',
            field=models.ManyToManyField(related_name='genre_list', through='jams.GenreSong', to='jams.genre'),
        ),
        migrations.AlterField(
            model_name='album',
            name='name',
            field=models.CharField(max_length=20, unique=True),
        ),
        migrations.AlterField(
            model_name='genre',
            name='name',
            field=models.CharField(max_length=20, unique=True),
        ),
        migrations.CreateModel(
            name='PlaylistSong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jams.playlist')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jams.song')),
            ],
            options={
                'unique_together': {('playlist', 'song')},
            },
        ),
        migrations.AddField(
            model_name='song',
            name='playlist',
            field=models.ManyToManyField(related_name='playlist_list', through='jams.PlaylistSong', to='jams.playlist'),
        ),
    ]
